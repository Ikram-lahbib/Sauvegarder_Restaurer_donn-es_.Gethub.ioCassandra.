#!/bin/bash
if [ $# eq 0]
then echo "no value"
else 
_BACKUP_DIR=Documents/keyspace
_DATA_DIR=/var/lib/cassandra/data
_NODETOOL=nodetool
_KEYSPACE=$1
  
_TODAY_DATE=$(date +%F)
_BACKUP_SNAPSHOT_DIR="$_BACKUP_DIR/$_TODAY_DATE/SNAPSHOT"
_BACKUP_SCHEMA_DIR="$_BACKUP_DIR/$_TODAY_DATE/SCHEMA"
_SNAPSHOT_DIR=$(find $_DATA_DIR -type d -name snapshots)
_SNAPSHOT_NAME=snp-$(date +%F-%H-%M-%S)
_DATE_SCHEMA=$(date +%F-%H-%M-%S)
_KEYSPACE_DIR="$_DATA_DIR/$_KEYSPACE"
###### Create / check backup Directory ####

if [ -d  "$_BACKUP_SCHEMA_DIR" ]
then
echo "$_BACKUP_SCHEMA_DIR already exist"
else
mkdir -p "$_BACKUP_SCHEMA_DIR"
fi

if [ -d  "$_BACKUP_SNAPSHOT_DIR" ]
then
echo "$_BACKUP_SNAPSHOT_DIR already exist"
else
mkdir -p "$_BACKUP_SNAPSHOT_DIR"
fi
##################### SECTION 1 : SCHEMA BACKUP ############################################ 

## Create directory inside backup SCHEMA directory. As per keyspace name.

if [ -d $_KEYSPACE ]
then
echo "$_KEYSPACE directori exist"
else
mkdir -p $_BACKUP_SCHEMA_DIR/$_KEYSPACE
fi

## Take SCHEMA Backup - All Keyspace and All tables


cqlsh -e "DESC KEYSPACE  $_KEYSPACE" > "$_BACKUP_SCHEMA_DIR/$_KEYSPACE/$_KEYSPACE"_schema-"$_DATE_SCHEMA".cql 

##################### END OF LINE ---- SECTION 1 : SCHEMA BACKUP #####################

###### Create snapshots for one keyspace
echo "creating snapshots for  keyspace $_KEYSPACE ...... "
$_NODETOOL snapshot  $_KEYSPACE -t $_SNAPSHOT_NAME
###### Get Snapshot directory path
_SNAPSHOT_DIR_ONE=$(find $_KEYSPACE_DIR -type d -name snapshots|awk '{gsub("'$_DATA_DIR'", "");print}' > snapshot_dir_one)

echo $_SNAPSHOT_DIR_ONE 
echo $snapshot_dir_one
## Create directory inside backup directory. As per keyspace name.
for i in $(cat snapshot_dir_one)
do
if [ -d $_BACKUP_SNAPSHOT_DIR/$i   ]
then
echo $i directory exist
else
mkdir -p $_BACKUP_SNAPSHOT_DIR/$i 
echo $i  Directory is created
fi
done
### Copy default Snapshot dir to backup dir

find $_KEYSPACE_DIR -type d -name $_SNAPSHOT_NAME > snp_dir_one

for SNP_VAR in $(cat snp_dir_one);
do
## Triming _DATA_DIR
_SNP_PATH_TRIM=`echo $SNP_VAR|awk '{gsub("'$_DATA_DIR'", "");print}'`

cp -prvf "$SNP_VAR" "$_BACKUP_SNAPSHOT_DIR$_SNP_PATH_TRIM";

done

fi

